{
    "$schema": "http://json.schemastore.org/template",
    "author": "David Driscoll",
    "classifications": ["Common", "Library", "Rocket Surgery"],
    "identity": "Library",
    "name": "Rocket Surgery Library",
    "shortName": "rocketlib",
    "defaultName": "Library",
    "preferNameDirectory": true,
    "sourceName": "Library",
    "generatorVersions": "[1.0.0.0-*)",
    "description": "",
    "tags": {
        "language": "C#",
        "type": "project"
    },
    "symbols": {
        "UseAutofac": {
            "datatype": "bool",
            "defaultValue": "false",
            "type": "parameter",
            "isRequired": false,
            "description": "Include Rocket.Surgery.Extensions.Autofac as a package reference"
        },
        "UseDryIoc": {
            "datatype": "bool",
            "defaultValue": "false",
            "type": "parameter",
            "isRequired": false,
            "description": "Enable dryioc packages"
        },
        "UseAutoMapper": {
            "datatype": "bool",
            "defaultValue": "false",
            "type": "parameter",
            "isRequired": false,
            "description": "Include AutoMapper in the dependencies"
        },
        "UseCommandLine": {
            "datatype": "bool",
            "defaultValue": "false",
            "type": "parameter",
            "isRequired": false,
            "description": "Include Rocket.Surgery.Extensions.CommandLine as a package reference"
        },
        "SkipConfiguration": {
            "datatype": "bool",
            "defaultValue": "false",
            "type": "parameter",
            "isRequired": false,
            "description": "Do not include Rocket.Surgery.Extensions.Configuration as a package reference"
        },
        "SkipDependencyInjection": {
            "datatype": "bool",
            "defaultValue": "false",
            "type": "parameter",
            "isRequired": false,
            "description": "Do not include Rocket.Surgery.Extensions.DependencyInjection as a package reference"
        },
        "SkipLogging": {
            "datatype": "bool",
            "defaultValue": "false",
            "type": "parameter",
            "isRequired": false,
            "description": "Do not include  Rocket.Surgery.Extensions.Logging as a package reference"
        },
        "UseFluentValidation": {
            "datatype": "bool",
            "defaultValue": "false",
            "type": "parameter",
            "isRequired": false,
            "description": "Include FluentValidation in the dependencies"
        },
        "UseMediatR": {
            "datatype": "bool",
            "defaultValue": "false",
            "type": "parameter",
            "isRequired": false,
            "description": "Include MediatR in the dependencies"
        },
        "UseSerilog": {
            "datatype": "bool",
            "defaultValue": "false",
            "type": "parameter",
            "isRequired": false,
            "description": "Include Rocket.Surgery.Extensions.Serilog as a package reference"
        },
        "UseWebJobs": {
            "datatype": "bool",
            "defaultValue": "false",
            "type": "parameter",
            "isRequired": false,
            "description": "Include Rocket.Surgery.Extensions.WebJobs as a package reference"
        },
        "skipSolution": {
            "datatype": "bool",
            "defaultValue": "true",
            "type": "parameter",
            "isRequired": false,
            "description": "Do not automatically add to a solution"
        }
    },
    "sources": [],
    "primaryOutputs": [
        {
            "path": "Library.csproj"
        }
    ],
    "postActions": [
        {
            "condition": "(!skipSolution)",
            "actionId": "D396686C-DE0E-4DE6-906D-291CD29FC5DE",
            "description": "Add project to solution file",
            "args": {
                "primaryOutputIndexes": "0"
            }
        }
    ],
    "specialCustomOperations": {
        "*.yml": {
            "operations": [
                {
                    "type": "conditional",
                    "configuration": {
                        "style": "line",
                        "token": "#"
                    }
                }
            ]
        }
    }
}
